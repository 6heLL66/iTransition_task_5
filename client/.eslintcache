[{"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\5\\client\\src\\index.js":"1","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\5\\client\\src\\App.js":"2","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\5\\client\\src\\MainPage.js":"3","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\5\\client\\src\\GamePage.js":"4"},{"size":220,"mtime":1607696846385,"results":"5","hashOfConfig":"6"},{"size":415,"mtime":1607795932774,"results":"7","hashOfConfig":"6"},{"size":5251,"mtime":1607794577420,"results":"8","hashOfConfig":"6"},{"size":7653,"mtime":1607797341143,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"maxpx3",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\5\\client\\src\\index.js",[],["21","22"],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\5\\client\\src\\App.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\5\\client\\src\\MainPage.js",["23","24","25","26","27"],"import React from 'react'\r\nimport './bootstrap.min.css'\r\n\r\nclass MainPage extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tgames: [],\r\n\t\t\tfindedGames: [],\r\n\t\t\tmodal: \"modal fade\"\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.updateGames()\r\n\t\tif (!localStorage.getItem(\"id\")){\r\n\t\t\tlocalStorage.setItem(\"id\", `f${(+new Date).toString(16)}`)\r\n\t\t}\r\n\t}\r\n\tgetName(i) {\r\n\t\treturn this.state.games[i].props.name\r\n\t}\r\n\tasync updateGames() {\r\n\t\tlet res = await fetch(\"/api/getGames\", { method: \"POST\" })\r\n\t\tlet games = await res.json()\r\n\t\tthis.state.games = []\r\n\t\tthis.state.findedGames = []\r\n\t\tgames.map((e, i) => {\r\n\t\t\tthis.state.games.push(<Game key={i} getName={this.getName.bind(this)}\r\n\t\t\t\t\t\t\t\t\tname={e.name} players={e.playersCount} \r\n\t\t\t\t\t\t\t\t\tnumber={i + 1} status={e.status} tags = {e.tags} />)\r\n\t\t\tthis.state.findedGames.push(this.state.games[i])\r\n\t\t})\r\n\t\tthis.forceUpdate()\r\n\t}\r\n\tshowModal() {\r\n\t\tthis.setState({ modal: \"modal fade show\" })\r\n\t}\r\n\thideModal() {\r\n\t\tthis.setState({ modal: \"modal fade\" })\r\n\t}\r\n\thideGames(games) {\r\n\t\tthis.setState({ findedGames: games })\r\n\t}\r\n\tclearCookie() {\r\n\t\tlocalStorage.clear()\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<TagsFinder games={this.state.games} func={this.hideGames.bind(this)} flag={\"findTags\"} />\r\n\t\t\t\t<table className=\"table table-dark table-striped\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t    \t<tr>\r\n\t\t\t\t      \t\t<th scope=\"col\">#</th>\r\n\t\t\t\t      \t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t      \t\t<th scope=\"col\">Players</th>\r\n\t\t\t\t      \t\t<th scope=\"col\">Status</th>\r\n\t\t\t\t    \t</tr>\r\n\t\t\t\t  \t</thead>\r\n\t\t\t\t  \t<tbody>\r\n\t\t\t\t \t\t{this.state.findedGames}\r\n\t\t\t\t  \t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<div className=\"form-row text-center\">\r\n\t    \t\t\t<button className=\"btn btn-outline-success\" onClick={this.showModal.bind(this)}>+Create New Game</button>\r\n\t \t\t\t</div>\r\n\t \t\t\t<Modal fade={this.state.modal} hide={this.hideModal.bind(this)} />\r\n\t \t\t\t{/*<button className=\"btn btn-primary\" onClick={this.clearCookie}>Clear Cookie</button>*/}\r\n \t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\tconnectToGame(e) {\r\n\t\twindow.location.href = \"/game/\" + this.props.getName(this.props.number - 1)\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<tr style={{ cursor: 'pointer' }} onClick={this.connectToGame.bind(this)}>\r\n\t\t\t   \t<th scope=\"row\">{this.props.number}</th>\r\n\t\t\t    <td>{this.props.name}</td>\r\n\t\t\t    <td>{this.props.players + \"/2\"}</td>\r\n\t\t\t    <td>{this.props.status}</td>\r\n\t\t\t</tr>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass TagsFinder extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\tfind(e) {\r\n\t\tlet text = e.target.value.split(\" \")\r\n\t\tif (this.props.flag === \"findTags\") {\r\n\t\t\tlet result = []\r\n\t\t\tlet games = this.props.games\r\n\t\t\tfor (let i = 0 ; i < games.length; i++) {\r\n\t\t\t\tlet da = false\r\n\t\t\t\tfor (let j = 0; j < games[i].props.tags.length; j++) {\r\n\t\t\t\t\tfor (let k = 0; k < text.length; k++) if (text[k] === games[i].props.tags[j]) da = true\r\n\t\t\t\t}\r\n\t\t\t\tif (da) result.push(games[i])\r\n\t\t\t}\r\n\t\tif (e.target.value === \"\") this.props.func(games)\r\n\t\telse this.props.func(result)\r\n\t\t}\r\n\t\telse if (this.props.flag === \"setTags\") {\r\n\t\t\tthis.props.func(text)\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn ( <input \tclassName=\"form-control mb-2 mt-2\" \r\n\t\t\t\t\t\tstyle={{ width: '30%', minWidth: '120px'}} \r\n\t\t\t\t\t\tplaceholder=\"Type tags...\" autocomplete=\"on\" onInput={this.find.bind(this)} /> )\r\n\t}\r\n}\r\n\r\nclass Modal extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tname: \"\",\r\n\t\t\ttags: []\r\n\t\t}\r\n\t}\r\n\tchangeHandler(e) {\r\n\t\tthis.state.name = e.target.value\r\n\t}\r\n\tupdateTags(tags) {\r\n\t\tthis.setState({ tags: tags })\r\n\t}\r\n\tasync createGame() {\r\n\t\tconst game = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tplayersCount: \"0\",\r\n\t\t\tplayers: { x: \"\", o: \"\"},\r\n\t\t\tscore: [0, 0],\r\n\t\t\tstatus: \"waiting\",\r\n\t\t\tturn: \"x\",\r\n\t\t\tstate: [\r\n\t\t\t\t[\"-\", \"-\", \"-\"],\r\n\t\t\t\t[\"-\", \"-\", \"-\"],\r\n\t\t\t\t[\"-\", \"-\", \"-\"]\r\n\t\t\t],\r\n\t\t\tcontinue: [],\r\n\t\t\ttags: this.state.tags\r\n\t\t}\r\n\t\tlet res = await fetch('/api/createGame', {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: JSON.stringify(game),\r\n\t\t\theaders: {'Content-Type': 'application/json'}\r\n\t\t})\r\n\t\tconsole.log(await res.json())\r\n\t\twindow.location.href = \"/game/\" + game.name\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={this.props.fade} id=\"exampleModal\" style={{ display: this.props.fade === \"modal fade\" ? \"none\" : \"block\"}}> \r\n  \t\t\t\t<div className=\"modal-dialog\">\r\n    \t\t\t\t<div className=\"modal-content\">\r\n      \t\t\t\t\t<div className=\"modal-header\">\r\n        \t\t\t\t\t<h5 className=\"modal-title\" id=\"exampleModalLabel\">Create New Game</h5>\r\n        \t\t\t\t\t<button className=\"btn-close\" aria-label=\"Close\" onClick={this.props.hide}></button>\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t<div className=\"modal-body\">\r\n      \t\t\t\t\t\t<label>Name:</label>\r\n        \t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"game's name\" onInput={this.changeHandler.bind(this)} />\r\n        \t\t\t\t\t<TagsFinder games={[]} func={this.updateTags.bind(this)} flag={\"setTags\"}/>\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t<div className=\"form-row text-center\">\r\n        \t\t\t\t\t<button className=\"btn btn-primary mb-2\" onClick={this.createGame.bind(this)}>Create Game</button>\r\n      \t\t\t\t\t</div>\r\n    \t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MainPage","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\5\\client\\src\\GamePage.js",["28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48"],"import React from 'react'\r\nimport openSocket from 'socket.io-client';\r\nimport './GamePage.css'\r\nimport './bootstrap.min.css'\r\n\r\nconst socket = openSocket('http://localhost:5000')\r\n\r\n\r\nclass GamePage extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tstate: [\r\n\t\t\t\t[\"-\", \"-\", \"-\"],\r\n\t\t\t\t[\"-\", \"-\", \"-\"],\r\n\t\t\t\t[\"-\", \"-\", \"-\"]\r\n\t\t\t],\r\n\t\t\tplayersCount: 0,\r\n\t\t\tturn: \"x\",\r\n\t\t\twinner: \"no\",\r\n\t\t\tstatus: \"waiting\",\r\n\t\t\tmodal: \"modal fade\",\r\n\t\t\tteam: \"\",\r\n\t\t\troom: window.location.href.split(\"/\")[4],\r\n\t\t\tscore: [0, 0],\r\n\t\t\tplayers: { x: \"\", y: \"\"}\r\n\t\t} \r\n\t}\r\n\tshowWin(win) {\r\n\t\tthis.setState({ winner: win.team, modal: \"modal fade show\" })\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tsocket.on(\"redirectOnMain\", () => window.location.href = \"/\")\r\n\t\tsocket.emit(\"connectPlayer\", { room: this.state.room, id: localStorage.getItem(\"id\") })\r\n\t\tsocket.on(\"updateClient\", (data) => { \r\n\t\t\tthis.setState({ state: data.state, turn: data.turn, status: data.status,\r\n\t\t\t \t\t\t\tplayersCount: data.playersCount, players: data.players, score: data.score,\r\n\t\t\t \t\t\t\tteam: data.players.x ===  localStorage.getItem(\"id\") ? \"x\" : \"o\" , modal: \"modal fade\", winner: \"no\"})\r\n\t\t\tconsole.log(this.state)\r\n\t\t\tlet win = this.checkWin()\r\n\t\t\tif (win) this.showWin(win)\r\n\t\t})\r\n\t\tsocket.on(\"setCookie\", (data) => {\r\n\t\t\tfetch(\"/api/setCookie\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: JSON.stringify(data),\r\n\t\t\t\theaders: {'Content-Type': 'application/json'}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\tcheckWin() {\r\n\t\tlet state = this.state.state\r\n\t\tlet draw = true\r\n\t\tlet res\r\n\t\tstate[0].map((e, i) => {\r\n\t\t\tif (e === \"-\" || state[1][i] === \"-\" || state[2][i] === \"-\") draw = false\r\n\t\t\telse if (e === state[1][i] && e === state[2][i]) {\r\n\t\t\t\tres = { win: [[0, i], [1, i], [2, i]], team: e }\r\n\t\t\t}\r\n\t\t})\r\n\t\tstate.map((e, i) => {\r\n\t\t\tif (e[0] === \"-\" || e[1] === \"-\" || e[2] === \"-\") draw = false\r\n\t\t\telse if (e[0] === e[1] && e[0] === e[2]) {\r\n\t\t\t\tres = { win: [[i, 0], [i, 1], [i, 2]], team: e[0] }\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (draw) return { team: \"draw\" }\r\n\t\tif (state[0][0] === state[1][1] && state[1][1] === state[2][2] && state[0][0] != \"-\") {\r\n\t\t\treturn { win: [[0, 0], [1, 1], [2, 2]], team: state[0][0] }\r\n\t\t}\r\n\t\tif (state[0][2] === state[1][1] && state[1][1] === state[2][0] && state[0][2] != \"-\") {\r\n\t\t\treturn { win: [[0, 2], [1, 1], [2, 0]], team: state[0][2] }\r\n\t\t}\r\n\t\tif (res) return res\r\n\t\telse return false\r\n\t}\r\n\tset(x, y) {\r\n\t\tif (this.state.state[y][x] === \"-\" && this.state.turn === this.state.team) {\r\n\t\t\tthis.state.state[y][x] = this.state.team\r\n\t\t\tthis.state.turn = this.state.turn === \"x\" ? \"o\" : \"x\"\r\n\t\t\tsocket.emit(\"updateGame\", { prop: \"state\", value: this.state.state, room: this.state.room })\r\n\t\t\tsocket.emit(\"updateGame\", { prop: \"turn\", value: this.state.turn, room: this.state.room })\r\n\t\t\t//this.forceUpdate()\r\n\t\t}\r\n\t\telse return\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Info turn={this.state.turn} team={this.state.team} status={this.state.status} score={this.state.score} />\r\n\t\t\t\t<GameBoard \tstate={this.state.state} set={this.set.bind(this)}\r\n\t\t\t\t\t\t \tmodal={this.state.modal} winner={this.state.winner} status={this.state.status} />\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass Info extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"info\">\r\n\t\t\t\t<div className=\"team\">{\"YOUR TEAM: \" + this.props.team}</div>\r\n\t\t\t\t<div className=\"status\" style={{ color: this.props.status === \"waiting\" ? \"yellow\" : \"green\"}}>{this.props.status}</div>\r\n\t\t\t\t<div className=\"score\">{\"X: \" + String(this.props.score[0]) + \" : \" + String(this.props.score[1]) + \" :O\"}</div>\r\n\t\t\t\t<div className=\"turn\" style={{ color: this.props.turn === \"x\" ? \"red\" : \"blue\"}}>{\"TURN: \" + this.props.turn}</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass GameBoard extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcanvas: null,\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tlet canvas = document.getElementById(\"canvas\")\r\n\t\tcanvas.width = canvas.parentNode.offsetWidth\r\n\t\tcanvas.height = canvas.width\r\n\t\tthis.state.canvas = canvas\r\n\t\tthis.state.ctx = canvas.getContext(\"2d\")\r\n\t\tthis.drawBoard()\r\n\t}\r\n\tdrawBoard() {\r\n\t\tconst size = this.state.canvas.width\r\n\t\tthis.state.ctx.fillStyle = \"black\"\r\n\t\tthis.state.ctx.fillRect(size / 3, 0, 2, size)\r\n\t\tthis.state.ctx.fillRect(2 * size / 3, 0, 2, size)\r\n\t\tthis.state.ctx.fillRect(0, size / 3, size, 2)\r\n\t\tthis.state.ctx.fillRect(0, 2 * size / 3, size, 2)\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\tthis.drawState()\r\n\t}\r\n\tdrawZero(x, y) {\r\n\t\tconst size = this.state.canvas.width\r\n\t\tthis.state.ctx.strokeStyle = \"blue\"\r\n\t\tthis.state.ctx.lineWidth = 4\r\n\t\tthis.state.ctx.beginPath()\r\n\t\tthis.state.ctx.arc(x * size / 3 + size / 6, //x\r\n\t\t\t\ty * size / 3 + size / 6, //y\r\n\t\t\t\tsize / 6 - size / 24, //radius\r\n\t\t\t\t0, //start\r\n\t\t\t\tMath.PI * 2) // end\r\n\t\tthis.state.ctx.stroke()\r\n\t}\r\n\tdrawCross(x, y) {\r\n\t\tconst size = this.state.canvas.width\r\n\t\tthis.state.ctx.strokeStyle = \"red\"\r\n\t\tthis.state.ctx.lineWidth = 4\r\n\t\tthis.state.ctx.beginPath()\r\n\t\tthis.state.ctx.moveTo(x * size / 3 + size / 24, y * size / 3 + size / 24)\r\n\t\tthis.state.ctx.lineTo(x * size / 3 + size / 3 - size / 24, y * size / 3 + size / 3 - size / 24)\r\n\t\tthis.state.ctx.moveTo(x * size / 3 + size / 3 - size / 24, y * size / 3 + size / 24)\r\n\t\tthis.state.ctx.lineTo(x * size / 3 + size / 24, y * size / 3 + size / 3 - size / 24)\r\n\t\tthis.state.ctx.stroke()\r\n\t}\r\n\tclearBoard() {\r\n\t\tthis.state.canvas.width = this.state.canvas.width\r\n\t}\r\n\tdrawState() {\r\n\t\tthis.clearBoard()\r\n\t\tthis.drawBoard()\r\n\t\tthis.props.state.map((e, i) => {\r\n\t\t\tfor (let j = 0; j < e.length; j++) {\r\n\t\t\t\tif (e[j] == \"-\") continue\r\n\t\t\t\telse if (e[j] == \"x\") this.drawCross(j, i)\r\n\t\t\t\telse if (e[j] == \"o\") this.drawZero(j, i)\r\n\t\t\t}\r\n\t\t})\r\n\t\tconsole.log(this.props.state)\r\n\t}\r\n\t\r\n\t\r\n\tmakeStep(e) {\r\n\t\tconst size = this.state.canvas.offsetWidth\r\n\t\tlet x = e.clientX - e.target.offsetLeft\r\n\t\tlet y = e.clientY - e.target.offsetTop\r\n\t\tconsole.log(x, y)\r\n\t\tif (x >= 0 && x <= size / 3) x = 0\r\n\t\telse if (x > size / 3 && x <= 2 * size / 3) x = 1\r\n\t\telse x = 2\r\n\t\tif (y >= 0 && y <= size / 3) y = 0\r\n\t\telse if (y > size / 3 && y <= 2 * size / 3) y = 1\r\n\t\telse y = 2\r\n\t\tif (this.props.winner === \"no\" && this.props.status !== \"waiting\") this.props.set(x, y)\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container text-center\">\r\n\t\t\t\t<canvas id=\"canvas\" onClick={this.makeStep.bind(this)}></canvas>\r\n\t\t\t\t<Modal winner={this.props.winner} fade={this.props.modal}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass Modal extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\tend() {\r\n\t\tsocket.emit(\"deleteGame\", window.location.href.split(\"/\")[4])\r\n\t}\r\n\tcontinue() {\r\n\t\tsocket.emit(\"addContinue\", { room: window.location.href.split(\"/\")[4], id: localStorage.getItem(\"id\"), winner: this.props.winner })\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={this.props.fade} id=\"exampleModal\" style={{ display: this.props.fade === \"modal fade\" ? \"none\" : \"block\"}}> \r\n  \t\t\t\t<div className=\"modal-dialog\">\r\n    \t\t\t\t<div className=\"modal-content\">\r\n      \t\t\t\t\t<div className=\"modal-header\">\r\n        \t\t\t\t\t<h5 className=\"modal-title\" id=\"exampleModalLabel\">Game Info</h5>\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t<div className=\"modal-body\">\r\n      \t\t\t\t\t\t<div>Winner: {this.props.winner.toUpperCase()}</div>\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t<div className=\"form-row text-center\">\r\n        \t\t\t\t\t<button className=\"btn btn-success mb-2\" onClick={this.continue.bind(this)}>Continue Game</button>\r\n        \t\t\t\t\t<button className=\"btn btn-danger mb-2 ml-5\" onClick={this.end.bind(this)}>End Game</button>\r\n      \t\t\t\t\t</div>\r\n    \t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default GamePage",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":16,"column":37,"nodeType":"55","messageId":"56","endLine":16,"endColumn":45,"fix":"57"},{"ruleId":"58","severity":1,"message":"59","line":27,"column":20,"nodeType":"60","messageId":"61","endLine":27,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":75,"column":2,"nodeType":"64","messageId":"65","endLine":77,"endColumn":3},{"ruleId":"62","severity":1,"message":"63","line":94,"column":2,"nodeType":"64","messageId":"65","endLine":96,"endColumn":3},{"ruleId":"66","severity":1,"message":"67","line":132,"column":3,"nodeType":"68","endLine":132,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":55,"column":23,"nodeType":"60","messageId":"61","endLine":55,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":61,"column":20,"nodeType":"60","messageId":"61","endLine":61,"endColumn":22},{"ruleId":"69","severity":1,"message":"70","line":68,"column":81,"nodeType":"71","messageId":"72","endLine":68,"endColumn":83},{"ruleId":"69","severity":1,"message":"70","line":71,"column":81,"nodeType":"71","messageId":"72","endLine":71,"endColumn":83},{"ruleId":"66","severity":1,"message":"67","line":79,"column":4,"nodeType":"68","endLine":79,"endColumn":23},{"ruleId":"66","severity":1,"message":"67","line":80,"column":4,"nodeType":"68","endLine":80,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":99,"column":2,"nodeType":"64","messageId":"65","endLine":101,"endColumn":3},{"ruleId":"66","severity":1,"message":"67","line":125,"column":3,"nodeType":"68","endLine":125,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":126,"column":3,"nodeType":"68","endLine":126,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":131,"column":3,"nodeType":"68","endLine":131,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":142,"column":3,"nodeType":"68","endLine":142,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":143,"column":3,"nodeType":"68","endLine":143,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":154,"column":3,"nodeType":"68","endLine":154,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":155,"column":3,"nodeType":"68","endLine":155,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":164,"column":3,"nodeType":"68","endLine":164,"endColumn":20},{"ruleId":"73","severity":1,"message":"74","line":164,"column":29,"nodeType":"68","messageId":"75","endLine":164,"endColumn":52},{"ruleId":"58","severity":1,"message":"59","line":169,"column":31,"nodeType":"60","messageId":"61","endLine":169,"endColumn":33},{"ruleId":"69","severity":1,"message":"76","line":171,"column":14,"nodeType":"71","messageId":"72","endLine":171,"endColumn":16},{"ruleId":"69","severity":1,"message":"76","line":172,"column":19,"nodeType":"71","messageId":"72","endLine":172,"endColumn":21},{"ruleId":"69","severity":1,"message":"76","line":173,"column":19,"nodeType":"71","messageId":"72","endLine":173,"endColumn":21},{"ruleId":"62","severity":1,"message":"63","line":204,"column":2,"nodeType":"64","messageId":"65","endLine":206,"endColumn":3},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"79","text":"80"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-self-assign","'this.state.canvas.width' is assigned to itself.","selfAssignment","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",[354,354],"()"]